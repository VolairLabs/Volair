name: Release Generator

on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed
  workflow_dispatch:

permissions:
  contents: write      

jobs:
  build_dmg:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build DMG
        run: ./build_scripts/openai/macos_build.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: gpt-computer-assistant-openai-dmg
          path: dist/*.dmg

  build_exe:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build EXE
        run: ./build_scripts/openai/windows_build.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: gpt-computer-assistant-openai-exe
          path: dist/*.exe

  release:
    needs: [build_dmg, build_exe]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload DMG Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*.dmg
          asset_name: gpt-computer-assistant-openai.dmg
          asset_content_type: application/octet-stream

      - name: Upload EXE Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*.exe
          asset_name: gpt-computer-assistant-openai.exe
          asset_content_type: application/octet-stream